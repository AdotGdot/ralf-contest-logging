<Window x:Class="Ralf.ScratchPadMemory.Views.ScratchPadView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:Ralf.ScratchPadMemory.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d" 
        d:DesignHeight="300" 
        d:DesignWidth="300"  
        Width="600"        
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Title="Memory Scratch Pad">

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Width"
                    Value="75" />
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Background"
                    Value="WhiteSmoke" />
            <Setter Property="Height"
                    Value="25" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Left"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="Height"
                    Value="25" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="CharacterCasing"
                    Value="Upper" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="FontSize"
                    Value="14" />
        </Style>
    </Window.Resources>
    <Grid>
        <!-- this gives the viewmodel a handle to this modal window -->
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding ViewVisible_Command}"  
                                       CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DataGrid Name="memoryGrid" 
                  Grid.Row="0" 
                  ItemsSource="{Binding Memories}"
                  AutoGenerateColumns="False" 
                  IsReadOnly="True" Height="Auto" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Callsign" Binding="{Binding Callsign}" />
                <DataGridTextColumn Header="Frequency" Binding="{Binding Frequency}" />
                <DataGridTextColumn Header="Mode" Binding="{Binding Mode}" />
                <DataGridTextColumn Header="Date" Binding="{Binding Date}" />
                <DataGridTextColumn Header="Time" Binding="{Binding Time}" />
                <DataGridTemplateColumn Header="Delete">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="X" 
                                    Width="25"
                                    Foreground="Red"
                                    FontWeight="Bold"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},                                
                                    Path=DataContext.DeleteMemory_Command}" 
                                    CommandParameter="{Binding SelectedItem, ElementName=memoryGrid}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding MemorySelected_Command}"
                                           CommandParameter="{Binding SelectedItem, ElementName=memoryGrid}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <Grid Grid.Row="1" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding ErrorMessage}" 
                       Grid.Column="0"
                       Grid.ColumnSpan="7"
                       Grid.Row="0"                       
                       Foreground="Red" 
                       HorizontalAlignment="Center" />
            <Label Grid.Row="1"
                   Grid.Column="0">
                Callsign
            </Label>
            <TextBox Grid.Row="1" 
                     Grid.Column="2"
                     Name="callsignTextBox"
                     Width="150"
                     Text="{Binding Callsign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            </TextBox>
            <Button Grid.Row="1" 
                    Grid.Column="4" 
                    Content="Add" 
                    Name="addButton">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding AddMemory_Command}"  
                                               CommandParameter="{Binding Text, ElementName=callsignTextBox}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Button Grid.Row="1" Grid.Column="6" Content="Clear List" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ClearMemory_Command}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Row="1" Grid.Column="8" Content="Close" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CloseView_Command}"  />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Grid>
</Window>
